@import './variable';
// reset
 
*{
    box-sizing: border-box;
    outline: none;
}

html {
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
}

a {
    color: #999;
}

p {
    line-height: 1.5em;
}

// 颜色循环
@each $colorKey,$color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }
    .bg-#{$colorKey} {
        background-color: $color;
    }
}

//文字对齐方式
@each $var in (left,center,right) {
    .text-#{$var} {
        text-align: $var !important;
    }
}

//文字省略
.text-ellipsis{
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}


// font-size


@each $sizeKey,$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size ;
    }
}

//flex
.d-flex {
    display: flex;
}
.flex-column {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}


@each $justifyContentKey,$justifyContent in  $flex-justify-content{
    .jc-#{$justifyContentKey} {
        justify-content: $justifyContent;
    }
}



@each $alignItemKey,$alignItem in $flex-align-item{
    .ai-#{$alignItem} {
        align-items: $alignItem;
    }
}

.flex-1{
    flex:1
}


// spacing

@each $typeKey,$type in $spacing-types {
// .m-1 margin:0.25rem
    @each $sizeKey,$size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size
        }
}
// .mx-1 margin-righ:0.25rem, margin-left:0.25rem
// .my-1 margin-top margin-bottom :0.25rem
    @each $sizeKey,$size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size
        }
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size
        }
    }


//.mt-1{ margin-top:0.25rem}
    @each $directionKey,$direction in $spacing-direction{
        @each $sizeKey,$size in $spacing-sizes {
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}:$size * $spacing-base-size
            }
        }
    }
    
}

// button
.btn {
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes,'sm') * $base-font-size;
    padding: 0.2rem 0.6rem;
    &.btn-lg{
        display: flex;
        justify-content: center;
        align-items: center;
        background: map-get($colors, 'light' );
        border: 1px solid map-get($colors, 'border' );
        i {
            color: map-get($colors, 'primary' );
            font-weight: bold;
            margin-right: 0.5rem;
            font-size: 1.5rem;
        }
    }
}

// nav
.nav{
    display: flex;
    flex-wrap: nowrap;
    overflow-x:auto;

    .nav-item{
        border-bottom: 3px solid transparent;
        padding-top: 8px;
        text-align: center;
        flex-shrink: 0;
        color: map-get($colors, 'grey-dark' );
        &.active{
            color: map-get($colors, 'primary' );
        }
    }
    &.nav-inverse {
        .nav-item {
           color: map-get($colors, 'white' ); 
        }
    }

}

//width height
.w-100 {
    width: 100%;
}

.h-100 {
    height: 100%;
}


// sprite 
.sprite {
    background: url(../sprite/icon.png) no-repeat 0 0;
    background-size: 75rem 61.0769rem;
    display: inline-block;
    &.sprite-present {
        width: 3.5385rem;
        height: 3.5385rem;
        background-position: 96.826% 34.826%;
    }
    &.sprite-retract {
        width: 0.6154rem;
        height: 0.4615rem;
        background-position: 98.915% 33.27%;
        transform: rotate(90deg);
    }

}

//borders
@each $dir in (top,right,bottom,left) {
   .border-#{$dir} {
       border-#{$dir}:1px solid map-get($colors, 'border' )
   }
}

